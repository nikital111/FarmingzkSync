/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TestTokenReward,
  TestTokenRewardInterface,
} from "../../mock/TestTokenReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200190d3803806200190d83398181016040528101906200003791906200023d565b81600390816200004891906200050d565b5080600490816200005a91906200050d565b50633b9aca006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050620005f4565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011382620000c8565b810181811067ffffffffffffffff82111715620001355762000134620000d9565b5b80604052505050565b60006200014a620000aa565b905062000158828262000108565b919050565b600067ffffffffffffffff8211156200017b576200017a620000d9565b5b6200018682620000c8565b9050602081019050919050565b60005b83811015620001b357808201518184015260208101905062000196565b60008484015250505050565b6000620001d6620001d0846200015d565b6200013e565b905082815260208101848484011115620001f557620001f4620000c3565b5b6200020284828562000193565b509392505050565b600082601f830112620002225762000221620000be565b5b815162000234848260208601620001bf565b91505092915050565b60008060408385031215620002575762000256620000b4565b5b600083015167ffffffffffffffff811115620002785762000277620000b9565b5b62000286858286016200020a565b925050602083015167ffffffffffffffff811115620002aa57620002a9620000b9565b5b620002b8858286016200020a565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031557607f821691505b6020821081036200032b576200032a620002cd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000356565b620003a1868362000356565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ee620003e8620003e284620003b9565b620003c3565b620003b9565b9050919050565b6000819050919050565b6200040a83620003cd565b620004226200041982620003f5565b84845462000363565b825550505050565b600090565b620004396200042a565b62000446818484620003ff565b505050565b5b818110156200046e57620004626000826200042f565b6001810190506200044c565b5050565b601f821115620004bd57620004878162000331565b620004928462000346565b81016020851015620004a2578190505b620004ba620004b18562000346565b8301826200044b565b50505b505050565b600082821c905092915050565b6000620004e260001984600802620004c2565b1980831691505092915050565b6000620004fd8383620004cf565b9150826002028217905092915050565b6200051882620002c2565b67ffffffffffffffff811115620005345762000533620000d9565b5b620005408254620002fc565b6200054d82828562000472565b600060209050601f83116001811462000585576000841562000570578287015190505b6200057c8582620004ef565b865550620005ec565b601f198416620005958662000331565b60005b82811015620005bf5784890151825560018201915060208501945060208101905062000598565b86831015620005df5784890151620005db601f891682620004cf565b8355505b6001600288020188555050505b505050505050565b61130980620006046000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634e6ec247116100715780634e6ec247146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610be6565b60405180910390f35b6100f160048036038101906100ec9190610ca1565b61032f565b6040516100fe9190610cfc565b60405180910390f35b61010f610352565b60405161011c9190610d26565b60405180910390f35b61013f600480360381019061013a9190610d41565b61035c565b60405161014c9190610cfc565b60405180910390f35b61015d610374565b60405161016a9190610db0565b60405180910390f35b61018d60048036038101906101889190610ca1565b61037d565b60405161019a9190610cfc565b60405180910390f35b6101bd60048036038101906101b89190610ca1565b6103b4565b005b6101d960048036038101906101d49190610dcb565b61050a565b6040516101e69190610d26565b60405180910390f35b6101f7610552565b6040516102049190610be6565b60405180910390f35b61022760048036038101906102229190610ca1565b6105e4565b6040516102349190610cfc565b60405180910390f35b61025760048036038101906102529190610ca1565b61065b565b6040516102649190610cfc565b60405180910390f35b61028760048036038101906102829190610df8565b61067e565b6040516102949190610d26565b60405180910390f35b6060600380546102ac90610e67565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610e67565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a610705565b905061034781858561070d565b600191505092915050565b6000600254905090565b60006103698484846108d6565b600190509392505050565b60006012905090565b600080610388610705565b90506103a981858561039a858961067e565b6103a49190610ec7565b61070d565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041a90610f47565b60405180910390fd5b61042f60008383610b4c565b80600260008282546104419190610ec7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104f29190610d26565b60405180910390a361050660008383610b51565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461056190610e67565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90610e67565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b5050505050905090565b6000806105ef610705565b905060006105fd828661067e565b905083811015610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063990610fd9565b60405180910390fd5b61064f828686840361070d565b60019250505092915050565b600080610666610705565b90506106738185856108d6565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361077c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107739061106b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e2906110fd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108c99190610d26565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093c9061118f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90611221565b60405180910390fd5b6109bf838383610b4c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3c906112b3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b339190610d26565b60405180910390a3610b46848484610b51565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b90578082015181840152602081019050610b75565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bb882610b56565b610bc28185610b61565b9350610bd2818560208601610b72565b610bdb81610b9c565b840191505092915050565b60006020820190508181036000830152610c008184610bad565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3882610c0d565b9050919050565b610c4881610c2d565b8114610c5357600080fd5b50565b600081359050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081359050610c9b81610c75565b92915050565b60008060408385031215610cb857610cb7610c08565b5b6000610cc685828601610c56565b9250506020610cd785828601610c8c565b9150509250929050565b60008115159050919050565b610cf681610ce1565b82525050565b6000602082019050610d116000830184610ced565b92915050565b610d2081610c6b565b82525050565b6000602082019050610d3b6000830184610d17565b92915050565b600080600060608486031215610d5a57610d59610c08565b5b6000610d6886828701610c56565b9350506020610d7986828701610c56565b9250506040610d8a86828701610c8c565b9150509250925092565b600060ff82169050919050565b610daa81610d94565b82525050565b6000602082019050610dc56000830184610da1565b92915050565b600060208284031215610de157610de0610c08565b5b6000610def84828501610c56565b91505092915050565b60008060408385031215610e0f57610e0e610c08565b5b6000610e1d85828601610c56565b9250506020610e2e85828601610c56565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e7f57607f821691505b602082108103610e9257610e91610e38565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ed282610c6b565b9150610edd83610c6b565b9250828201905080821115610ef557610ef4610e98565b5b92915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000610f31601f83610b61565b9150610f3c82610efb565b602082019050919050565b60006020820190508181036000830152610f6081610f24565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610fc3602583610b61565b9150610fce82610f67565b604082019050919050565b60006020820190508181036000830152610ff281610fb6565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611055602483610b61565b915061106082610ff9565b604082019050919050565b6000602082019050818103600083015261108481611048565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006110e7602283610b61565b91506110f28261108b565b604082019050919050565b60006020820190508181036000830152611116816110da565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611179602583610b61565b91506111848261111d565b604082019050919050565b600060208201905081810360008301526111a88161116c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061120b602383610b61565b9150611216826111af565b604082019050919050565b6000602082019050818103600083015261123a816111fe565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061129d602683610b61565b91506112a882611241565b604082019050919050565b600060208201905081810360008301526112cc81611290565b905091905056fea26469706673582212205784493047298bebdb720157b0e2ce5aa3fa909da37051e08c59e2c37d2f1fae64736f6c63430008120033";

type TestTokenRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestTokenReward__factory extends ContractFactory {
  constructor(...args: TestTokenRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestTokenReward> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<TestTokenReward>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): TestTokenReward {
    return super.attach(address) as TestTokenReward;
  }
  override connect(signer: Signer): TestTokenReward__factory {
    return super.connect(signer) as TestTokenReward__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenRewardInterface {
    return new utils.Interface(_abi) as TestTokenRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTokenReward {
    return new Contract(address, _abi, signerOrProvider) as TestTokenReward;
  }
}
